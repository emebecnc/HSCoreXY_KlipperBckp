############CALIBRATION MACROS############

[gcode_macro LOOP_TEST]
gcode:
    G28
    {% set vel = (500,600,700) %}               # set velocity values to be tested (mm/s)
    {% set accel = (10000,15000,20000) %}       # set accel values to be tested (mm/s^2)
    {% set min = 5 %}                           # set the square lower left point
    {% set max = 270 %}                         # set the square upper right corner

    G1 X{min} Y{min} F5000

    {% for V in vel %}
        {% set machineVel = V*60 %}
        {% for A in accel %}
            M118 velocity:{V}mm/s, accel:{A}mm/s^2
            SET_VELOCITY_LIMIT VELOCITY={V}
            SET_VELOCITY_LIMIT ACCEL={A}
            SET_VELOCITY_LIMIT ACCEL_TO_DECEL={A}
            G1 X{max} Y{min} F{machineVel}
            G1 X{max} Y{max}
            G1 X{min} Y{min}
            G1 X{min} Y{max}
            G1 X{max} Y{min}
            G1 X{max} Y{min}
            G1 X{max} Y{max}
            G1 X{min} Y{max}
            G1 X{min} Y{min}
            G4 P1000
        {% endfor %}
    {% endfor %}

    # restore original limits
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity}
    SET_VELOCITY_LIMIT ACCEL={printer.configfile.settings.printer.max_accel}
    SET_VELOCITY_LIMIT ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}

[gcode_macro G29]
gcode:
      BED_MESH_CALIBRATE

[gcode_macro G32]
gcode:
      Z_TILT_ADJUST

[gcode_macro PA_tunning]
gcode: 
	SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=1 ACCEL=500
	TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START=0 FACTOR=.005


[gcode_macro MEASURE_RESONNANCES_X]
gcode: 
    RESPOND PREFIX= MSG="Homing"
    G28
    #Dock_probe
    RESPOND PREFIX= MSG="Measuring resonnances on X Axis"
    SHAPER_CALIBRATE AXIS=X
    #Park_toolhead

[gcode_macro MEASURE_RESONNANCES_Y]
gcode: 
    RESPOND PREFIX= MSG="Homing"
    G28
    #Dock_probe
    RESPOND PREFIX= MSG="Measuring resonnances on Y Axis"
    SHAPER_CALIBRATE AXIS=Y
    #Park_toolhead

[gcode_macro Hotend_PID_Tune]
gcode:   
    {% set tool_temp = params.TEMPERATURE|default(220)|int %}
    {% set tool_name = printer.toolhead.extruder %}
    PID_CALIBRATE HEATER={tool_name} TARGET={tool_temp}

[gcode_macro Bed_PID_Tune]
gcode:
    {% set bed_temp = params.TEMPERATURE|default(60)|int %}
    PID_CALIBRATE HEATER=heater_bed TARGET={bed_temp}

######Square Corner Velocity
#https://github.com/RomRider/klipper-FastGyroidInfill/blob/main/klipper/fast_infill.cfg

[gcode_macro TEST_Z_DOWN]
gcode:
    {% set amount  = params.amount|default(1)|int %}
    TESTZ Z=-{amount}

[gcode_macro TEST_Z_UP]
gcode:
    {% set amount  = params.amount|default(1)|int %}
    TESTZ Z=+{amount}

[gcode_macro TEST_Z_UP_MIDDLE]
gcode:
    TESTZ Z=+

[gcode_macro TEST_Z_DOWN_MIDDLE]
gcode:
    TESTZ Z=-


##########################################################
#Please use with EXTREME care and keep your finger ready on the Emergency stop or power switch. Print WILL fail and you need to stop it when it fails.
#Explanation:

#1st line: Steps << number of times it will do the stop and go, 100 times in the below case>>
#2nd line: Velocity/Speed << The speed/velocity at which you want to test. 1000mms here>>
#3rd line: safety distance << the safety distance in mm that the print head will not go from X max and Y max defined on your printer config>>
#4th line: Starting Accel << the starting acceleration value for the test. 10K here>>
#Credits to DoubleT on Discord for his help on these macros
[gcode_macro ACCELL_TEST_X]
gcode:
  {% set steps = params.STEPS|default(100)|int %}
  {% set speed = params.VELOCITY|default(1000)|float * 60 %}
  {% set inset = 10.0|float %} 
  {% set accel = 10000|int %} 
  {% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}
  {% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}
  {% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}
  {% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}

  SAVE_GCODE_STATE NAME=accelltest_state
  SET_VELOCITY_LIMIT ACCEL={accel} 
  SET_VELOCITY_LIMIT ACCEL_TO_DECEL={accel}
  G28
  G1 Z5
  G1 X{minX} Y{minY} F{speed} 

  {% for INTERVAL in range(steps) %}
    {% set eff = accel + (INTERVAL * 1000) %} 
    SET_VELOCITY_LIMIT ACCEL={eff} 
    SET_VELOCITY_LIMIT ACCEL_TO_DECEL={eff}
    G1 X{minX} Y{minY} F{speed}  
    G1 X{maxX} Y{maxY} F{speed}  
  {% endfor %}    

  RESTORE_GCODE_STATE NAME=accelltest_state 


[gcode_macro ACCELL_TEST_Y]
gcode:
  {% set steps = params.STEPS|default(100)|int %}
  {% set speed = params.VELOCITY|default(1000)|float * 60 %}
  {% set inset = 10.0|float %}
  {% set accel = 10000|int %}
  {% set maxX = printer.configfile.settings.stepper_x.position_max|float - inset %}
  {% set maxY = printer.configfile.settings.stepper_y.position_max|float - inset %}
  {% set minX = printer.configfile.settings.stepper_x.position_min|float + inset %}
  {% set minY = printer.configfile.settings.stepper_y.position_min|float + inset %}

  SAVE_GCODE_STATE NAME=accelltest_state
  SET_VELOCITY_LIMIT ACCEL={accel} 
  SET_VELOCITY_LIMIT ACCEL_TO_DECEL={accel}
  G28
  G1 Z5
  G1 X{minX} Y{minY} F{speed} 

  {% for INTERVAL in range(steps) %}
    {% set eff = accel + (INTERVAL * 1000) %} 
    SET_VELOCITY_LIMIT ACCEL={eff} 
    SET_VELOCITY_LIMIT ACCEL_TO_DECEL={eff}
    G1 X{maxX} Y{minY} F{speed}  
    G1 X{minX} Y{maxY} F{speed}  
  {% endfor %}    

  RESTORE_GCODE_STATE NAME=accelltest_state 